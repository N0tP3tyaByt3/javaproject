/*1. Allow a salesperson to ring up items using a simple, point-and-click interface. Your store can sell anything (except for pizzas), so populate your POS with inventory items as you see fit.


2. The interface should fit on one screen (and, in general, be full-screen).
	- 	
3. Purchase items should be added to a JList (or other types of scrollable interface) to allow the clerk to easily select and then edit or remove items during the transaction.
	-  drawtool app list
4. A running total of items in the list should be displayed (both number of items and total cost).
Test problem 2
Run a method that totals the cart everytime a button is clicked to add or remove an item


5. Payment (simulated) should be accepted by cash, check, or credit card.
-checkbox telling program which method of payment customer is using?
-then go into logic of cash, check, credit card
-if cash, a dialog box asking to “insert cash” appears
-if check, a dialog box asking to make check out to “our company name” appears
-if credit card, a notification that prompts for credit card number


6. Support for coupons, employee discounts, and manager price-overrides should be included.
-array for coupons? 
-if statements (logic) whether a certain discount applies to price


7. A receipt should be generated (e.g., by drawing to a JPanel) and printed when a button is pressed (this can be in a separate window). 
	-Load Report Problem (for loop, integers, etc…)*/


package Image;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

public class project extends JFrame implements ActionListener {
	//public 
	JPanel p = new JPanel();
	JList list = new JList();
	JLabel rtype = new JLabel("Type of Room");
	String[] room = new String[] {"Davy Jones' Locker", "Crow's Nest", "Caption Jack Sparrow"};
	String[] extra = new String[] {"Ocean View", "Locked Inside", "Small Window"}; 
	JLabel label = new JLabel("Addtional Items");
	//iceburg 
	//lifejackets
	JComboBox jc = new JComboBox(extra);
	//Object selected = roombox.getSelectedItem();	
	JComboBox roombox = new JComboBox(room);
	JButton cash = new JButton ("Cash");
	JButton credit = new JButton ("Credit");
	JButton check = new JButton ("Check");
	JButton b1 = new JButton("Complete");
	JButton b2 = new JButton("Add Discount");
	JButton b3 = new JButton("Print");
	Double total; 	

	
	public static void main(String[] args) { 
		project app =  new project();
		app.setSize(600,600);
		app.setDefaultCloseOperation(EXIT_ON_CLOSE);
		app.setTitle("Titantic 2 Shops");
		app.setVisible(true);
		
	}

	//Constructor Method 
	project(){
		p.setSize(600,600);
		p.add(b1);
		p.add(b2);
		p.add(b3);
		p.add(credit);
		p.add(cash);
		p.add(check);
		p.add(rtype);
		p.add(roombox);
		p.add(jc);
		p.add(list);
		roombox.addActionListener(this);
		b1.addActionListener(this);
		b2.addActionListener(this);
		b3.addActionListener(this);
		credit.addActionListener(this);
		check.addActionListener(this);
		cash.addActionListener(this);
		
		add(p);
	}
	
	@Override
	//"Davy Jones' Locker", "Crow's Nest", "Caption Jack Sparrow"
	public void actionPerformed(ActionEvent arg0) {
